<?xml version="1.0" encoding="UTF-8"?>
<project name="Forest" default="all" basedir=".">

	<property name="srcdir" value="src/main/java" />
    <property name="resourcedir" value="src/main/resources" />
    <property name="package" value="forest" />
	<property name="mvc" value="mvc" />
	<property name="utility" value="utility" />
	<property name="packagenames" value="${package},${mvc},${utility}" />

	<property name="destdir" value="./Classes" />
	<property name="docdir" value="./JavaDoc" />
	<property name="instdir" value="./${ant.project.name}.app/Contents/Resources/Java" />
	<property name="copyright" value="Copyright 2025 TEAM JavaGrove. All Rights Reserved." />
	<property name="zipname" value="${ant.project.name}" />
	<property name="doc-title" value="Forest Documant" />

	<property name="libdir" value="./lib" /> <property name="junitjar" value="junit-4.13.1.jar" />
	<property name="hamcrestjar" value="hamcrest-core-1.3.jar" />
    <property name="mockitojar" value="mockito-core-5.18.0.jar" />

	<property name="reportdir" value="./test-report" />

	<fail message="Apache Ant 1.10.4+ is required.">
		<condition>
			<not>
				<antversion atleast="1.10.4" />
			</not>
		</condition>
	</fail>

    <path id="classpath.test">
        <pathelement location="${destdir}"/> <fileset dir="${libdir}"> <include name="${junitjar}"/>
            <include name="${hamcrestjar}"/>
            <include name="${mockitojar}"/>
        </fileset>
    </path>


	<target name="all" depends="jar" description="build all">
		<exec executable="date" spawn="false" />
	</target>

	<target name="prepare" description="prepare to compile">
		<mkdir dir="${destdir}" />
		<exec executable="date" spawn="false" />
	</target>

	<target name="compile" depends="prepare" description="compile all main sources">
		<javac
			fork="true"
			srcdir="${srcdir}"
			destdir="${destdir}"
			includeAntRuntime="false"
			encoding="UTF-8"
			deprecation="on"
			verbose="false">
			<compilerarg value="-J-Dfile.encoding=UTF8" />
			<compilerarg value="-Xlint:all" />
		</javac>
		<exec executable="date" spawn="false" />
	</target>

    <target name="compile-test" depends="compile" description="compile all test sources">
        <mkdir dir="${destdir}" />
        <javac
            fork="true"
            srcdir="src/test/java" destdir="${destdir}"
            includeAntRuntime="false"
            encoding="UTF-8"
            deprecation="on"
            verbose="false">
            <compilerarg value="-J-Dfile.encoding=UTF8" />
            <compilerarg value="-Xlint:all" />
            <classpath refid="classpath.test"/> </javac>
        <exec executable="date" spawn="false" />
    </target>

	<target name="jar" depends="compile" description="make jar file">
		<jar
			destfile="${destdir}/${ant.project.name}.jar"
			basedir="${destdir}"
			includes="**/*.class"
		>
			<manifest>
				<attribute name="Project" value="TreeSort Animator" />
				<attribute name="Main-Class" value="forest.Example" />
				<section name="Shared">
					<attribute name="Title" value="Forest" />
					<attribute name="Vender" value="JavaGrove" />
				</section>
				<section name="Copyright">
					<attribute name="Copy" value="Project: TreeSort Animator" />
				</section>
			</manifest>

			<fileset dir="src/main/resources">
				<include name="**/*.txt" />
			</fileset>

		</jar>
		<exec executable="date" spawn="false" />
	</target>

	<target name="clean" description="cleaning">
		<delete dir="${destdir}" />
		<delete dir="${docdir}" />
		<delete dir="${instdir}" />
		<delete file="../${zipname}.zip" />
		<delete dir="${reportdir}" />
		<exec executable="date" spawn="false" />
	</target>

	<target name="test" depends="all" description="test">
        <exec executable="java" spawn="false">
            <arg line="-Dfile.encoding=UTF-8 -Xmx512m -Xss1024k -jar ${destdir}/${ant.project.name}.jar" />
            <arg value="${srcdir}/../resources/data/tree.txt" />
            <arg value="${srcdir}/../resources/data/forest.txt" />
            <arg value="${srcdir}/../resources/data/semilattice.txt" />
        </exec>
        <exec executable="date" spawn="false" />
    </target>

    <target name="unittest" depends="compile-test" description="run unit tests">
		<delete dir="${reportdir}" />
		<mkdir dir="${reportdir}"/>
		<junit printsummary="yes" haltonfailure="no" showoutput="true"> <classpath refid="classpath.test"/>
			<formatter type="xml"/> <formatter type="plain" usefile="false"/> <batchtest fork="yes" todir="${reportdir}">
                <fileset dir="${destdir}">
                    <include name="forest/*Test.class" />
                </fileset>
			</batchtest>
		</junit>
        <junitreport todir="${reportdir}">
			<fileset dir="${reportdir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="noframes" todir="${reportdir}/html" />
		</junitreport>
		<exec executable="open" spawn="true">
			<arg line="-a 'Safari' ${reportdir}/html/junit-noframes.html" />
		</exec>
		<exec executable="date" spawn="false" />
	</target>

	<target name="tree" depends="all" description="tree">
		<exec executable="java" spawn="false">
			<arg line="-Dfile.encoding=UTF-8 -Xmx512m -Xss1024k -jar ${destdir}/${package}.jar ${srcdir}/../resources/data/tree.txt" /> </exec>
		<exec executable="date" spawn="false" />
	</target>

	<target name="forest" depends="all" description="forest">
		<exec executable="java" spawn="false">
			<arg line="-Dfile.encoding=UTF-8 -Xmx512m -Xss1024k -jar ${destdir}/${package}.jar ${srcdir}/../resources/data/forest.txt" /> </exec>
		<exec executable="date" spawn="false" />
	</target>

	<target name="semilattice" depends="all" description="semilattice">
		<exec executable="java" spawn="false">
			<arg line="-Dfile.encoding=UTF-8 -Xmx512m -Xss1024k -jar ${destdir}/${package}.jar ${srcdir}/../resources/data/semilattice.txt" /> </exec>
		<exec executable="date" spawn="false" />
	</target>

<target name="install" depends="all" description="install into application">
        <mkdir dir="${ant.project.name}.app/Contents/MacOS" />
        <mkdir dir="${ant.project.name}.app/Contents/Resources/Java" />
        <mkdir dir="${ant.project.name}.app/Contents/Resources/data" /> <copy
            file="${basedir}/${destdir}/${ant.project.name}.jar"
            todir="${instdir}"
        />

        <copy
            file="${resourcedir}/data/tree.txt"
            todir="${ant.project.name}.app/Contents/Resources/data/"
        />

        <echo file="${ant.project.name}.app/Contents/Info.plist">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;
&lt;plist version="1.0"&gt;
&lt;dict&gt;
    &lt;key&gt;CFBundleExecutable&lt;/key&gt;
    &lt;string&gt;${ant.project.name}&lt;/string&gt;
    &lt;key&gt;CFBundleIdentifier&lt;/key&gt;
    &lt;string&gt;com.example.${ant.project.name}&lt;/string&gt;
    &lt;key&gt;CFBundleName&lt;/key&gt;
    &lt;string&gt;${ant.project.name}&lt;/string&gt;
    &lt;key&gt;CFBundlePackageType&lt;/key&gt;
    &lt;string&gt;APPL&lt;/string&gt;
    &lt;key&gt;CFBundleShortVersionString&lt;/key&gt;
    &lt;string&gt;1.0&lt;/string&gt;
    &lt;key&gt;CFBundleVersion&lt;/key&gt;
    &lt;string&gt;1&lt;/string&gt;
&lt;/dict&gt;
&lt;/plist&gt;</echo>

        <echo file="${ant.project.name}.app/Contents/MacOS/${ant.project.name}">#!/bin/bash
cd "$(dirname "$0")/../Resources/Java"

DEFAULT_DATA_FILE="../data/tree.txt" # MacOSから見た相対パス

if [ "$#" -eq 0 ]; then
    java -Dfile.encoding=UTF-8 -Xmx512m -Xss1024k -jar ${ant.project.name}.jar "$DEFAULT_DATA_FILE"
else
    java -Dfile.encoding=UTF-8 -Xmx512m -Xss1024k -jar ${ant.project.name}.jar "$@"
fi
</echo>

        <chmod file="${ant.project.name}.app/Contents/MacOS/${ant.project.name}" perm="755" />

        <exec executable="date" spawn="false" />
    </target>

	<target name="doc" depends="all" description="make document (javadoc)">
		<mkdir dir="${docdir}" />
		<javadoc
			locale="ja_JP"
			sourcepath="${srcdir}"
			destdir="${docdir}"
			packagenames="${packagenames}"
			author="true"
			version="true"
			charset="UTF-8"
			encoding="UTF-8"
			docencoding="UTF-8"
			linksource="yes"
			additionalparam="-J-Dfile.encoding=UTF-8"
			access="private">
			<doctitle>${doc-title}</doctitle>
			<bottom>${copyright}</bottom>
			<classpath>
				<pathelement location="." />
			</classpath>
		</javadoc>
		<exec executable="open">
			<arg line="-a 'Safari' ${docdir}/index.html" />
		</exec>
		<exec executable="date" spawn="false" />
	</target>

	<target name="zip" depends="clean" description="make zip file">
		<delete file="../${zipname}.zip" />
		<zip destfile="../${zipname}.zip">
			<zipfileset dir="." prefix="${zipname}" />
		</zip>
		<exec executable="date" spawn="false" />
	</target>

</project>